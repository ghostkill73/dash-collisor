#!/usr/bin/env dash
# ----------------------------------------------------------------------+
# autor   : Abner Benedito
# github  : ghostkill73
# creation: 2024-06-07
# version : 0.0.1 (2024-06-07)
# license : GPLv3+
# ----------------------------------------------------------------------+
# DESCRIPTION
# ----------------------------------------------------------------------+
# LICENSE
#
# Copyright (C) 2024  Abner Benedito
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# ----------------------------------------------------------------------+
# CONFIGURATIONS

# Disable unicode.
LC_ALL=C; LANG=C

# ----------------------------------------------------------------------+
# VARIABLES

VERSION="v0.0.1"
SAVEFILE="save-hash-collision.txt"

# ----------------------------------------------------------------------+
# FUNCTIONS

showHelp() {
# md5, sha1, sha224, sha256, sha384, sha512 & b2
printf '%s\n' "dash-collisor  Copyright (C) 2024  Abner Benedito
 This program comes with ABSOLUTELY NO WARRANTY
 This is free software, and you are welcome to redistribute it
 under certain conditions.

Usage: dash-collisor [OPTIONS...] [HASH-TYPE...] -h<HASH...>
dash-collisor is a bruteforce that searches for collisions of a hash.

      --help                 display this help and exit
  -V, --version              output version information and exit
  -L, --license              display the license program
      --[HASH-TYPE]          find hash collisions at the input
			       avaliable hashes:
			       md5, sha1, sha224, sha256, sha384,
			       sha512 and b2
  -nv, --no-verbose          don't display hashes calcs
  -s,  --save                save the collision result

  example: dash-collisor --save --md5 -h63a9f0ea7bb98050796b649e85481845
	     Calcula hashes de md5 de strings aleatórias até colidir
	     com a hash especificada e salva o resultado #TRADUZIR


contribute and report bugs in: <github.com/ghostkill73/dash-collisor>"
}

showError() {
local option="$1"
printf '%s\n' "  the option "$option" was not found.
  type '--help' option for more information."
}

showVersion() {
printf '%s\n' "  dash-collisor "$VERSION" <github.com/ghostkill73/dash-collisor>"
}

shortLicense() {
printf '%s\n' " dash-collisor  Copyright (C) 2024  Abner Benedito
 This program comes with ABSOLUTELY NO WARRANTY
 This is free software, and you are welcome to redistribute it
 under certain conditions. use '--license' for more information.

 use "--help" option for more information."
}


license() {
printf '%s\n' " dash-collisor Copyright (C) 2024  Abner Benedito

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>."
}

hash() {
local type="$1"
local value="$2"

case $type in
# md5, sha1, sha224, sha256, sha384, sha512 & b2

--md5)
	HASH="$(printf '%s' "$value" | md5sum)"
	printf '%s\n' "${HASH%% *}"
;;


--sha1)
	HASH="$(printf '%s' "$value" | sha1sum)"
	printf '%s\n' "${HASH%% *}"
;;


--sha224)
	HASH="$(printf '%s' "$value" | sha224sum)"
	printf '%s\n' "${HASH%% *}"
;;


--sha256)
	HASH="$(printf '%s' "$value" | sha256sum)"
	printf '%s\n' "${HASH%% *}"
;;


--sha384)
	HASH="$(printf '%s' "$value" | sha384sum)"
	printf '%s\n' "${HASH%% *}"
;;


--sha512)
	HASH="$(printf '%s' "$value" | sha512sum)"
	printf '%s\n' "${HASH%% *}"
;;


--b2)
	HASH="$(printf '%s' "$value" | b2sum)"
	printf '%s\n' "${HASH%% *}"
;;

esac
}

main() {
local type="$1"
local hash="$2"
local limit="30"

[ "$VERBOSE" = 'on' ] && {
	while :; do
#	local random="$(mktemp --dry-run XXXXXXXXXXXXXXXXXXXXXXXXX)" # use this for more performance
	local random="$(head /dev/urandom | tr -dc "[:graph:]" | head -c "$limit"; echo)"

	if [ "$(hash "$type" "$random")" = "$hash" ]; then
		printf '%s\n' "[+] hash("$random") = ${hash}"
		[ "$SAVE" = 'on' ] && \
		printf '%s\n' "hash("$random") = ${hash}" >> $SAVEFILE
		exit 0
	else
		printf '%s\n' "[-] hash("$random") != ${hash}"
	fi
	done
}

[ "$VERBOSE" = 'off' ] && {
	while :; do
#	local random="$(mktemp --dry-run XXXXXXXXXXXXXXXXXXXXXXXXX)" # use this for more performance
	local random="$(head /dev/urandom | tr -dc "[:graph:]" | head -c "$limit"; echo)"

	[ "$(hash "$type" "$random")" = "$hash" ] && {
	        printf '%s\n' "[+] hash("$random") = ${hash}"
		[ "$SAVE" = 'on' ] && \
		printf '%s\n' "hash("$random") = ${hash}" >> $SAVEFILE
	        exit 0
	}
	done
}

}

# ----------------------------------------------------------------------+
############################ BEGIN SCRIPT ############################

if [ "$#" = '0' ]; then
	shortLicense
else
	case $1 in
		#case: dash-collisor --[hash-type]
		--md5|--sha1|--sha224|--sha256|--sha384|--sha512|--b2)
			VERBOSE='on'
			SAVE='off'
			main $1 ${2#*-h}
		;;

		--help) showHelp ;;

		-L|--license) license ;;

		-V|--version) showVersion ;;

		-nv|--no-verbose|-s|--save|-snv|-nvs)
		#case: dash-collisor -nv
		[ "$1" = '-nv' ] || [ "$1" = '--no-verbose' ] && {
			VERBOSE='off'

			[ "$2" = '-s' ] || [ "$2" = '--save' ] && {
				SAVE='on'
			}
		}

		#case: dash-collisor -s
		[ "$1" = '-s' ] || [ "$1" = '--save' ] && {
			SAVE='on'

			[ "$2" = '-nv' ] || [ "$2" = '--no-verbose' ] && {
				VERBOSE='off'
			}
		}

		#case: dash-collisor [-snv|-nvs]
		[ "$1" = '-snv' ] || [ "$1" = '-nvs' ] && {
			SAVE='on'; VERBOSE='off'
		}

		case $2 in
			# case: dash-collider -s|-nv|-nvs|-snv --[hash-type]
			--md5|--sha1|--sha224|--sha256|--sha384|--sha512|--b2)
				VERBOSE='on'
				main $2 ${3#*-h}
			;;

			#case: dash-collider --save --no-verbose --[hash-type]
			#case: dash-collider --no-verbose --save --[hash-type]
			-nv|--no-verbose|-s|--save)
			case $3 in
				--md5|--sha1|--sha224|--sha256|--sha384|--sha512|--b2)
					main $3 ${4#*-h}
				;;

				*) showError "$3" ;;
			esac # case $3
		        ;;

			*) showError "$2" ;;
		esac # case $2
		;;

	*) showError "$1" ;;
	esac # case $1
fi

############################# END SCRIPT #############################
# ----------------------------------------------------------------------+
